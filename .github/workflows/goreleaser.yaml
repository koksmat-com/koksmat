name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.18"

      - name: Set up Git
        run: git config --global --add safe.directory /github/workspace

      - name: Install Goreleaser
        run: |
          curl -sSfL https://install.goreleaser.com/github-actions | sh

      - name: Run Goreleaser
        run: |
          goreleaser release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}
          # WINGET_REPO_TOKEN: ${{ secrets.WINGET_REPO_TOKEN }}

      - name: Verify Release
        run: |
          goreleaser check --snapshot

  # choco_release:
  #   runs-on: windows-latest
  #   needs: release
  #   steps:
  #     - name: Check out the code
  #       uses: actions/checkout@v2

  #     - name: Install Chocolatey
  #       run: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

  #     - name: Choco Pack and Push
  #       run: |
  #         choco pack
  #         choco push -k ${{ secrets.CHOCOLATEY_API_KEY }} -s https://push.chocolatey.org/

  # winget_release:
  #   runs-on: ubuntu-latest
  #   needs: release
  #   steps:
  #     - name: Check out the code
  #       uses: actions/checkout@v2

  #     - name: Create Winget Manifest
  #       run: |
  #         echo "Generating Winget manifest"
  #         # Replace with your command to generate the Winget manifest
  #         ./generate-winget-manifest.sh

  #     - name: Submit Winget Manifest
  #       run: |
  #         git clone https://github.com/microsoft/winget-pkgs.git
  #         cp your-manifest.yaml winget-pkgs/manifests/
  #         cd winget-pkgs
  #         git config --global user.email "your-email@example.com"
  #         git config --global user.name "your-username"
  #         git checkout -b add-package
  #         git add .
  #         git commit -m "Add new package"
  #         git push https://github.com/username/winget-pkgs.git add-package
  #       env:
  #         WINGET_REPO_TOKEN: ${{ secrets.WINGET_REPO_TOKEN }}
